server.address=0.0.0.0
server.port=8080
server.context-path=/rpisec-auth

# server log configuration
server.tomcat.accesslog.enabled=true
server.tomcat.basedir=${user.home}/log
logging.path=${user.home}/log
logging.file=auth.log


# jdbc datasource configuration
spring.datasource.url=jdbc:postgresql://rpisec-test-auth-db:5432/rpisec-auth
spring.datasource.username=rpisec-auth
spring.datasource.password=rpisec-auth
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=POSTGRES
spring.datasource.continue-on-error=false

# jpa configuration
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect

logging.level.org.hibernate=WARN
logging.level.org.springframework=WARN
logging.level.org.thymeleaf=WARN
logging.level.at.rpisec=INFO

# rpisec app-server configuration for registering clients
rpisec.baseUrl=http://rpisec-test-app:8080/rpisec-app
rpisec.resourceId=rpisec-app
rpisec.clientId=rpisec-app
rpisec.clientSecret=rpisec-app
rpisec.systemUser=rpisec-app
rpisec.systemPassword=rpisec-app

# firebase config file location
firebase.configFile=${user.home}/conf/firebase-account.json

# base url
link.baseUrl=http://localhost:${server.port}
test.integration.rest.api.enabled=true