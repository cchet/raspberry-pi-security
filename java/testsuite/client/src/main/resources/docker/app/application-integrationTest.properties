server.address=0.0.0.0
server.port=8080
server.context-path=/rpisec-app
server.tomcat.accesslog.enabled=true
server.tomcat.basedir=${user.home}/log
logging.path=${user.home}/log
logging.file=app.log

# jdbc datasource configuration
spring.datasource.url=jdbc:postgresql://rpisec-test-app-db:5432/rpisec-app
spring.datasource.username=rpisec-app
spring.datasource.password=rpisec-app
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=POSTGRES
spring.datasource.continue-on-error=false

# jpa configuration
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect

# log configuration
logging.level.org.hibernate=WARN
logging.level.org.springframework=WARN
logging.level.org.thymeleaf=WARN
logging.level.at.rpisec=INFO
spring.mail.properties.mail.debug=true

# system user
security.user.name=rpisec-app
security.user.password=rpisec-app

# rpisec oauth-server configuration for token validation and rest api calls to oauth-server with its system user
rpisec-oauth.baseUrl=http://rpisec-test-auth:8080/rpisec-auth
rpisec-oauth.resourceId=rpisec-app
rpisec-oauth.checkTokenEndpoint=${rpisec-oauth.baseUrl}/oauth/check_token
rpisec-oauth.clientId=rpisec-app
rpisec-oauth.clientSecret=rpisec-app
rpisec-oauth.systemUser=rpisec-auth
rpisec-oauth.systemPassword=rpisec-auth

# firebase config file location
firebase.configFile=${user.home}/conf/firebase-account.json

# base url
link.baseUrl=http://localhost:${server.port}
test.integration.rest.api.enabled=true
